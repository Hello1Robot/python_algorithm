# 회문이면 0, 유사회문이면 1, 둘 다 아니면 2를 출력
# 한 문자를 '삭제하면' 회문이 되는 것 = 유사회문
# 투포인터를 생각하면서 문제 풀이
# i와 j를 움직이면서 경우의 수 생각하기
# 만약 i와 j가 같으면 그냥 움직이기
# 다를 경우, [i, j-1] 의 케이스와 [i+1, j]의 케이스를 회문검사.
# 둘 중 하나가 회문 = 1
# 둘 다 회문이 아님 = 2

N = int(input())
for _ in range(N):
    pldr = input() # 문자열 받아오기
    res_cnt = 0 # 출력할 결과 카운터 초기화
    i = 0 # 왼쪽 시작점 설정
    j = len(pldr)-1 # 오른쪽 끝점 설정
    while i <= j: # 시작점이 끝점과 같거나 교차될 때 까지
        if pldr[i] == pldr[j]: # 팰린드롬이면, 한칸씩 전진
            i += 1
            j -= 1
        else:
            # 팰린드롬이 되지 않았을 경우에는, i와 j-1, i+1과 j를 비교해줘서 하나의 값을 지웠을 때 팰린드롬이 될 가능성을 봄
            case1 = pldr[i+1:j+1] #슬라이싱이라서 j에 +1을 해주긴 했음 (j값도 포함되어야하기 때문)
            case2 = pldr[i:j]
            if case1 == case1[::-1] or case2 == case2[::-1]: # 만약 두 케이스 중 하나라도 팰린드롬이 되면 유사팰린드롬(1)
                res_cnt = 1
                break
            else:
                # 둘 다 안되면, 팰린드롬 아님
                res_cnt = 2
                break
