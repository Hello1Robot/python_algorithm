# 달팽이 변형문제
# 가운데서부터 반시계방향으로 뱅글뱅글
# 토네이도 자리는 0. 밀면 그 다음칸으로 옮겨짐
# 1 1 2 2 3 3 4 4 ... 순으로 움직임
# cnt 와 max_length 올리면서 flag로 켰다껐다 하면 될듯?
# 방향 설정하고 - 방향에 따라서 영향받는 필드 설정하고 - 필드 방향 휙휙 돌리고 - 만약 범위 벗어나면 그만큼 모래 사라지게 만들고 뭐 이런 순서?
# 

N = int(input())
field = [list(map(int,input().split())) for _ in range(N)]
x = N//2
y = N//2

# 방향 순서는 왼쪽 - 아래 - 오른쪽 - 위
# 총 45퍼센트의 모래가 날아감... 어후
# 수정 - 45퍼센트가 날아가서 55퍼센트를 남기는 것으로 생각했는데, 이게 내림작업을 하다보니까 퍼센트로 구해버리면 값이 달라져버림!!
# 그래서 초기값에서 계속 빼는 것으로 변경
# 왼쪽 / 아래 / 오른쪽 / 위 일때 방향별로 리스트 만들어서 꺼내기
# i방향과 동일하게 작성하기
ddx = [0,1,0,-1]
ddy = [-1,0,1,0]
dust = [[(0,-2,0.05),(-1,-1,0.1),(1,-1,0.1),(1,0,0.07),(-1,0,0.07),(-2,0,0.02),(2,0,0.02),(1,1,0.01),(-1,1,0.01)],
    [(1,0,0.55),(2,0,0.05),(0,-1,0.07),(0,1,0.07),(0,2,0.02),(0,-2,0.02),(1,1,0.1),(1,-1,0.1),(-1,1,0.01),(-1,-1,0.01)],
    [(0,2,0.05),(1,1,0.1),(-1,1,0.1),(-1,0,0.07),(1,0,0.07),(2,0,0.02),(-2,0,0.02),(-1,-1,0.01),(1,-1,0.01)],
    [(-2,0,0.05),(0,1,0.07),(0,-1,0.07),(0,-2,0.02),(0,2,0.02),(-1,-1,0.1),(-1,1,0.1),(1,-1,0.01),(1,1,0.01)]]
i = 0
j = 0
cnt = 0
max_length = 1
flag = 0
res = 0
while True:
    x = x + ddx[i%4]
    y = y + ddy[i%4]
    if x < 0 or y < 0:
        break
    first_sand = field[x][y]
    for dx, dy, percent in dust[i%4]:
        nx = x + dx
        ny = y + dy
        sand = int(field[x][y]*percent)
        if 0 <= nx < N and 0 <= ny < N:
            field[nx][ny] += sand
            first_sand -= sand
        else:
            res += sand
            first_sand -= sand

    if  0 <= x + ddx[i%4] < N and 0 <= y + ddy[i%4] < N:
        field[x + ddx[i%4]][y + ddy[i%4]] += first_sand
    else:
        res += first_sand
    field[x][y] = 0

    cnt += 1
    if cnt == max_length:
        if not flag:
            flag = 1
            cnt = 0
            i += 1
        elif flag:
            flag = 0
            cnt = 0
            max_length += 1
            i += 1


print(res)
